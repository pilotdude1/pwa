FROM node:18.19.0-alpine as builder

WORKDIR /app

# Install dependencies
COPY package*.json ./
RUN npm install --legacy-peer-deps

# Copy source
COPY . .

# Build the app with environment variables
ARG PUBLIC_SUPABASE_URL
ARG PUBLIC_SUPABASE_ANON_KEY
ARG PRIVATE_SUPABASE_SERVICE_ROLE
ARG PUBLIC_STRIPE_API_KEY
ARG PRIVATE_STRIPE_API_KEY
ARG PRIVATE_STRIPE_PRICE_ID
ARG PRIVATE_STRIPE_WEBHOOK_KEY
ARG PRIVATE_MAILGUN_DOMAIN
ARG PRIVATE_MAILGUN_API_KEY

ENV PUBLIC_SUPABASE_URL=$PUBLIC_SUPABASE_URL
ENV PUBLIC_SUPABASE_ANON_KEY=$PUBLIC_SUPABASE_ANON_KEY
ENV PRIVATE_SUPABASE_SERVICE_ROLE=$PRIVATE_SUPABASE_SERVICE_ROLE
ENV PUBLIC_STRIPE_API_KEY=$PUBLIC_STRIPE_API_KEY
ENV PRIVATE_STRIPE_API_KEY=$PRIVATE_STRIPE_API_KEY
ENV PRIVATE_STRIPE_PRICE_ID=$PRIVATE_STRIPE_PRICE_ID
ENV PRIVATE_STRIPE_WEBHOOK_KEY=$PRIVATE_STRIPE_WEBHOOK_KEY
ENV PRIVATE_MAILGUN_DOMAIN=$PRIVATE_MAILGUN_DOMAIN
ENV PRIVATE_MAILGUN_API_KEY=$PRIVATE_MAILGUN_API_KEY

# Build the app
RUN npm run build

# Production image
FROM node:18.19.0-alpine

WORKDIR /app

# Copy built assets from builder
COPY --from=builder /app/build ./build
COPY --from=builder /app/package*.json ./
COPY --from=builder /app/static ./static

# Install production dependencies only
RUN npm install --production --legacy-peer-deps

# Expose port
EXPOSE 3000

# Start the app
CMD ["npm", "run", "start"] 